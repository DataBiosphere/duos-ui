name: Tag, Build and Push Image

on:
  push:
    branches:
    - develop
    paths-ignore:
    - 'README.md'
    - '.github/**'
  pull_request:
    branches:
    - develop
    paths-ignore:
    - 'README.md'
env:
  VAULT_ADDR: https://clotho.broadinstitute.org:8200
  VAULT_PATH_GCR: secret/devops/ci/gcp-sa/broad-dsp-gcr-public/gcr-publish-key
  REGISTRY_HOST: gcr.io
  GOOGLE_PROJECT: broad-dsp-gcr-public
  SERVICE_NAME: ${{ github.event.repository.name }}
jobs:
  tag-build-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code 
      uses: actions/checkout@v2
    - name: Get Short Sha
      id: short-sha
      run: echo "::set-output name=sha::$(git rev-parse --short=12 HEAD)"
    - name: Pull Vault Image
      run: docker pull vault:1.1.0
    - name: Get Vault Token
      id: vault-token-get
      run: |
        VAULT_TOKEN=$(docker run --rm --cap-add IPC_LOCK \
          -e "VAULT_ADDR=${VAULT_ADDR}" \
          vault:1.1.0 \
          vault write -field token \
            auth/approle/login role_id=${{ secrets.VAULT_APPROLE_ROLE_ID }} \
            secret_id=${{ secrets.VAULT_APPROLE_SECRET_ID }})
        echo ::set-output name=vault-token::$VAULT_TOKEN
        echo ::add-mask::$VAULT_TOKEN
    - name: Get Vault Secrets
      id: vault-secret-get
      run: |
        GCR_EMAIL=$(docker run --rm --cap-add IPC_LOCK \
          -e "VAULT_TOKEN=${{ steps.vault-token-get.outputs.vault-token }}" \
          -e "VAULT_ADDR=${VAULT_ADDR}" \
          vault:1.1.0 \
          vault read -field=base64_encoded_json ${VAULT_PATH_GCR} | base64 -d | jq -r '.client_email')
        GCR_KEY=$(docker run --rm --cap-add IPC_LOCK \
          -e "VAULT_TOKEN=${{ steps.vault-token-get.outputs.vault-token }}" \
          -e "VAULT_ADDR=${VAULT_ADDR}" \
          vault:1.1.0 \
          vault read -field=base64_encoded_json ${VAULT_PATH_GCR})
        echo ::set-output name=gcr-email::$GCR_EMAIL
        echo ::add-mask::$GCR_EMAIL
        echo ::set-output name=gcr-key::$GCR_KEY
        echo ::add-mask::$GCR_KEY
    - name: Auth to GCR
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ steps.vault-secret-get.outputs.gcr-email }}
        service_account_key: ${{ steps.vault-secret-get.outputs.gcr-key }}
    - name: Auth Docker for GCR
      run: gcloud auth configure-docker --quiet
    - name: Construct tags
      id: construct-tags
      run: |
        SHA_TAG="${REGISTRY_HOST}/${GOOGLE_PROJECT}/${SERVICE_NAME}:${{ steps.short-sha.sha }}"
        ENVIRONMENT_TAG=""
        if ${{ github.event_name == 'pull_request'}}; then
          ENVIRONMENT_TAG="${REGISTRY_HOST}/${GOOGLE_PROJECT}/${SERVICE_NAME}:${{ github.event.pull_request.head.ref }}"
        elif ${{github.event_name == 'push' }}; then
          ENVIRONMENT_TAG="${REGISTRY_HOST}/${GOOGLE_PROJECT}/${SERVICE_NAME}:dev"
        fi
        echo ::set-output name=sha-tag::$SHA_TAG
        echo ::set-output name=environment-tag::$ENVIRONMENT_TAG
    - name: Build Image
      run: |
        docker build \
        -t ${{ steps.construct-tags.sha-tag }} \
        -t ${{ steps.construct-tags.environment-tag }} \
        .
    - name: Push Image to GCR
      run: |
        docker push ${{ steps.construct-tags.sha-tag }}
        docker push ${{ steps.construct-tags.environment-tag }}
    - name: Dispatch to terra-helmfile
      if: github.event_name == 'push'
      uses: broadinstitute/repository-dispatch@master
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        repository: broadinstitute/terra-helmfile
        event-type: update-service
        client-payload: '{"service": "duos", "version": "${{ steps.short-sha.sha }}", "dev_only": false}'
        

        