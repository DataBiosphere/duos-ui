version: 2.1

executors:
  cloud-sdk:
    docker:
      - image: google/cloud-sdk
  node:
    docker:
      - image: circleci/node:10

commands:
  build-env:
    description: "Build/push environment image to GCR"
    executor: cloud-sdk
    parameters:
      env:
        type: string
        default: "dev"
      project-name:
        type: string
        default: "duos-ui"
      google-project:
        type: string
        default: "broad-duos-dev"
    steps:
      - checkout
      - run:
          name: Export env vars for substitution. $BASH_ENV is sourced before each step
          command: |
            echo 'export COMMIT="git rev-parse --short HEAD"' >> $BASH_ENV
            echo 'export ENV="$<< parameters.env >>"' >> $BASH_ENV
            echo 'export PROJECT_NAME="$<< parameters.project-name >>"' >> $BASH_ENV
            echo 'export GOOGLE_PROJECT="$<< parameters.google-project >>"' >> $BASH_ENV
      -run:
          name: "Test what my env looks like"
          command: printenv
      - run:
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT}
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Docker build/push to GCR
          command: |
            docker build -t ${PROJECT_NAME} .
            docker tag ${PROJECT_NAME} gcr.io/${GOOGLE_PROJECT}/${PROJECT_NAME}:${COMMIT}
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io
            docker push gcr.io/${GOOGLE_PROJECT}/${PROJECT_NAME}:${COMMIT}
            gcloud container images add-tag gcr.io/${GOOGLE_PROJECT}/${PROJECT_NAME}:${COMMIT} gcr.io/${GOOGLE_PROJECT}/${PROJECT_NAME}:${ENV} -q
            gcloud container images add-tag gcr.io/${GOOGLE_PROJECT}/${PROJECT_NAME}:${COMMIT} gcr.io/${GOOGLE_PROJECT}/${PROJECT_NAME}:latest -q
  deploy-env:
    description: "Build/push environment image to GCR"
    executor: cloud-sdk
    parameters:
      env:
        type: string
        default: "dev"
      namespace:
        type: string
        default: "duos"
      project-name:
        type: string
        default: "duos-ui"
      google-project:
        type: string
        default: "broad-duos-dev"
      google-zone:
        type: string
        default: "us-central1-a"
      google-cluster:
        type: string
        default: "duos-ui-dev-cluster"
      commit:
        type: string
        default: ""
    steps:
      - run:
          name: Export env vars for substitution. $BASH_ENV is sourced before each step
          command: |
            echo 'export PROJECT_NAME="$<< parameters.project-name >>"' >> $BASH_ENV
            echo 'export NAMESPACE="$<< parameters.namespace >>"' >> $BASH_ENV
            echo 'export GOOGLE_PROJECT="$<< parameters.google-project >>"' >> $BASH_ENV
            echo 'export GOOGLE_COMPUTE_ZONE="$<< parameters.google-zone >>"' >> $BASH_ENV
            echo 'export GOOGLE_CLUSTER_NAME="$<< parameters.google-cluster >>"' >> $BASH_ENV
      - run:
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - run:
          name: Deploy to Kubernetes
          command: |
            envsubst < ${HOME}/project/conf/k8s.yml > ${HOME}/patched_k8s.yml
            kubectl apply -f ${HOME}/patched_k8s.yml
            kubectl rollout status deployment/${PROJECT_NAME}

jobs:
  test:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps2-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - deps2-{{ checksum "package.json" }}-
            - deps2-
      - run: npm install --silent
      - save_cache:
          key: deps2-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
      - run: npm test
  deploy-dev:
    steps:
      - build-env:
          env: "dev"
          project-name: "duos-ui"
          google-project: "broad-duos-dev"
      - deploy-env:
          env: "dev"
          namespace: "duos"
          project-name: "duos-ui"
          google-project: "broad-duos-dev"
          google-zone: "us-central1-a"
          google-cluster: "duos-ui-dev-cluster"
          commit: ${COMMIT}

workflows:
  version: 2
  build-deploy:
    jobs:
      - test
      - deploy-dev:
          filters:
            branches:
              only: develop
