apiVersion: v1
kind: Service
metadata:
  name: ${APPLICATION_NAME}-service
  labels:
    app: ${APPLICATION_NAME}
  namespace: ${NAMESPACE}
spec:
  selector:
    app: ${APPLICATION_NAME}
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  sessionAffinity: None
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APPLICATION_NAME}
  labels:
    app: ${APPLICATION_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${APPLICATION_NAME}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ${APPLICATION_NAME}
    spec:
      containers:
        - name: ${APPLICATION_NAME}
          image: gcr.io/${GOOGLE_PROJECT}/${APPLICATION_NAME}:${COMMIT}
          imagePullPolicy: Always
          volumeMounts:
            - name: configs
              mountPath: /usr/share/nginx/html/config.json
              subPath: config.json
      volumes:
        - name: configs
          configMap:
            name: duos-configmap
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
